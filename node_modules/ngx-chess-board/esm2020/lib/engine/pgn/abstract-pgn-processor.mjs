export class AbstractPgnProcessor {
    constructor() {
        this.pgn = '';
        this.currentIndex = 0.5;
    }
    getPGN() {
        return this.pgn;
    }
    processChecks(checkmate, check, stalemate) {
        if (checkmate) {
            this.pgn += '#';
        }
        else {
            if (check) {
                this.pgn += '+';
            }
        }
    }
    reset() {
        this.pgn = '';
        this.currentIndex = 0.5;
    }
    addPromotionChoice(promotion) {
        switch (promotion) {
            case 1:
                this.pgn += '=Q';
                break;
            case 2:
                this.pgn += '=R';
                break;
            case 3:
                this.pgn += '=B';
                break;
            case 4:
                this.pgn += '=N';
                break;
        }
    }
    removeLast() {
        if (this.currentIndex >= 0.5) {
            this.currentIndex -= 0.5;
            const regex1 = new RegExp(/\d+\./g);
            regex1.test(this.pgn);
            this.pgn = this.pgn.substring(0, regex1.lastIndex).trim();
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtcGduLXByb2Nlc3Nvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1jaGVzcy1ib2FyZC9zcmMvbGliL2VuZ2luZS9wZ24vYWJzdHJhY3QtcGduLXByb2Nlc3Nvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxNQUFNLE9BQWdCLG9CQUFvQjtJQUExQztRQUVjLFFBQUcsR0FBRyxFQUFFLENBQUM7UUFDVCxpQkFBWSxHQUFHLEdBQUcsQ0FBQztJQXNEakMsQ0FBQztJQTdDVSxNQUFNO1FBQ1QsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ3BCLENBQUM7SUFFRCxhQUFhLENBQUMsU0FBa0IsRUFBRSxLQUFjLEVBQUUsU0FBa0I7UUFDaEUsSUFBSSxTQUFTLEVBQUU7WUFDWCxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQztTQUNuQjthQUFNO1lBQ0gsSUFBSSxLQUFLLEVBQUU7Z0JBQ1AsSUFBSSxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUM7YUFDbkI7U0FDSjtJQUNMLENBQUM7SUFFRCxLQUFLO1FBQ0QsSUFBSSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDZCxJQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQztJQUM1QixDQUFDO0lBRUQsa0JBQWtCLENBQUMsU0FBUztRQUN4QixRQUFRLFNBQVMsRUFBRTtZQUNmLEtBQUssQ0FBQztnQkFDRixJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQztnQkFDakIsTUFBTTtZQUNWLEtBQUssQ0FBQztnQkFDRixJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQztnQkFDakIsTUFBTTtZQUNWLEtBQUssQ0FBQztnQkFDRixJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQztnQkFDakIsTUFBTTtZQUNWLEtBQUssQ0FBQztnQkFDRixJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQztnQkFDakIsTUFBTTtTQUNiO0lBQ0wsQ0FBQztJQUVELFVBQVU7UUFDTixJQUFHLElBQUksQ0FBQyxZQUFZLElBQUksR0FBRyxFQUFFO1lBQ3pCLElBQUksQ0FBQyxZQUFZLElBQUksR0FBRyxDQUFDO1lBQ3pCLE1BQU0sTUFBTSxHQUFHLElBQUksTUFBTSxDQUFFLFFBQVEsQ0FBRSxDQUFDO1lBQ3RDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3RCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUM3RDtJQUNMLENBQUM7Q0FFSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvYXJkIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2JvYXJkJztcclxuaW1wb3J0IHsgUGllY2UgfSBmcm9tICcuLi8uLi9tb2RlbHMvcGllY2VzL3BpZWNlJztcclxuaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvcGllY2VzL3BvaW50JztcclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdFBnblByb2Nlc3NvciB7XHJcblxyXG4gICAgcHJvdGVjdGVkIHBnbiA9ICcnO1xyXG4gICAgcHJvdGVjdGVkIGN1cnJlbnRJbmRleCA9IDAuNTtcclxuXHJcbiAgICBwdWJsaWMgYWJzdHJhY3QgcHJvY2VzcyhcclxuICAgICAgICBib2FyZDogQm9hcmQsXHJcbiAgICAgICAgc291cmNlUGllY2U6IFBpZWNlLFxyXG4gICAgICAgIGRlc3RQb2ludDogUG9pbnQsXHJcbiAgICAgICAgZGVzdFBpZWNlPzogUGllY2VcclxuICAgICk6IHZvaWQ7XHJcblxyXG4gICAgcHVibGljIGdldFBHTigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5wZ247XHJcbiAgICB9XHJcblxyXG4gICAgcHJvY2Vzc0NoZWNrcyhjaGVja21hdGU6IGJvb2xlYW4sIGNoZWNrOiBib29sZWFuLCBzdGFsZW1hdGU6IGJvb2xlYW4pIHtcclxuICAgICAgICBpZiAoY2hlY2ttYXRlKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGduICs9ICcjJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoY2hlY2spIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucGduICs9ICcrJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXNldCgpIHtcclxuICAgICAgICB0aGlzLnBnbiA9ICcnO1xyXG4gICAgICAgIHRoaXMuY3VycmVudEluZGV4ID0gMC41O1xyXG4gICAgfVxyXG5cclxuICAgIGFkZFByb21vdGlvbkNob2ljZShwcm9tb3Rpb24pIHtcclxuICAgICAgICBzd2l0Y2ggKHByb21vdGlvbikge1xyXG4gICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBnbiArPSAnPVEnO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgICAgIHRoaXMucGduICs9ICc9Uic7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5wZ24gKz0gJz1CJztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDQ6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBnbiArPSAnPU4nO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZUxhc3QoKSB7XHJcbiAgICAgICAgaWYodGhpcy5jdXJyZW50SW5kZXggPj0gMC41KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VycmVudEluZGV4IC09IDAuNTtcclxuICAgICAgICAgICAgY29uc3QgcmVnZXgxID0gbmV3IFJlZ0V4cCggL1xcZCtcXC4vZyApO1xyXG4gICAgICAgICAgICByZWdleDEudGVzdCh0aGlzLnBnbik7XHJcbiAgICAgICAgICAgIHRoaXMucGduID0gdGhpcy5wZ24uc3Vic3RyaW5nKDAsIHJlZ2V4MS5sYXN0SW5kZXgpLnRyaW0oKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==